/** implements a graphical cactus */
class Cactus {
	
	field int location; // screen location of the cactus' top-left corner
	field int memAddress;
	
	/** Constructs a new cactus with a given location and type */
	constructor Cactus new() {
		let location = 7103;
		do draw();
		return this;
	}

	/** disposes this cactus */
	method void dispose() {
		do erase();
		do Memory.deAlloc(this);
		return;
	}
	// TODO: divide all column numbers by two to move cactus one pixel
	// left, use two 16x16 block to achieve animation.

	/** draws a black cactus on the screen */
	method void draw() {
		// method void cactusOne(int location) {
		let memAddress = 16384+location;
		do Memory.poke(memAddress+0, 384);
		do Memory.poke(memAddress+32, 962);
		do Memory.poke(memAddress+64, 17351);
		do Memory.poke(memAddress+96, -7225);
		do Memory.poke(memAddress+128, -7225);
		do Memory.poke(memAddress+160, -7225);
		do Memory.poke(memAddress+192, -7225);
		do Memory.poke(memAddress+224, -1);
		do Memory.poke(memAddress+256, 32766);
		do Memory.poke(memAddress+288, 16380);
		do Memory.poke(memAddress+320, 960);
		do Memory.poke(memAddress+352, 960);
		do Memory.poke(memAddress+384, 960);
		do Memory.poke(memAddress+416, 960);
		do Memory.poke(memAddress+448, 960);
		do Memory.poke(memAddress+480, 960);
		return;
	}
	
	/** draws a white 16x16 block on the screen */
	method void erase() {
		let memAddress = 16384+location;
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 0);
		do Memory.poke(memAddress+64, 0);
		do Memory.poke(memAddress+96, 0);
		do Memory.poke(memAddress+128, 0);
		do Memory.poke(memAddress+160, 0);
		do Memory.poke(memAddress+192, 0);
		do Memory.poke(memAddress+224, 0);
		do Memory.poke(memAddress+256, 0);
		do Memory.poke(memAddress+288, 0);
		do Memory.poke(memAddress+320, 0);
		do Memory.poke(memAddress+352, 0);
		do Memory.poke(memAddress+384, 0);
		do Memory.poke(memAddress+416, 0);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
		do Screen.setColor(false);
		return;
	}
	
	/** moves the cactus left by 16 pixels */
	method void moveLeft() {
		if (location > 7071) {
			do erase();
			let location = location - 1;
			do draw();
		}
		return;
	}

	/** checks if cactus touching left edge of screen */
	method boolean checkEdge() {
		if (location < 7073) { return true; }
		return false;
	}

	/** checks if cactus is in the same column as the dino on the screen */
	method boolean checkTouch() {
		if (location = 7073) { return true; }
		return false;
	}
}
